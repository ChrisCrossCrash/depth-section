/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, Environment } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Grid: THREE.Mesh
  }
  materials: {}
}

const Model = React.forwardRef<JSX.IntrinsicElements['group'], any>(
  ({ ...props }, ref) => {
    const { nodes } = useGLTF('/fragmented-bg-transformed.glb') as GLTFResult
    return (
      <group ref={ref} {...props} dispose={null}>
        <mesh
          geometry={nodes.Grid.geometry}
          // material={nodes.Grid.material}
          rotation={[Math.PI / 2, 0, 0]}
        >
          <meshStandardMaterial
            color='#270082'
            roughness={0.3}
            metalness={0.5}
          />
        </mesh>
        <Environment preset='city' />
      </group>
    )
  }
)

useGLTF.preload('/fragmented-bg-transformed.glb')

export default Model
